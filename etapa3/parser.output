Terminals unused in grammar

   TOKEN_ERROR


State 47 conflicts: 1 shift/reduce
State 213 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ldec

    2 ldec: dec ldec
    3     | %empty

    4 dec: func_dec
    5    | KW_FLOAT TK_IDENTIFIER '=' exp ';'
    6    | KW_CHAR TK_IDENTIFIER '=' exp ';'
    7    | KW_INT TK_IDENTIFIER '=' exp ';'
    8    | KW_INT TK_IDENTIFIER '[' exp ']' ':' vet_dec ';'
    9    | KW_INT TK_IDENTIFIER '[' exp ']' ';'
   10    | KW_FLOAT TK_IDENTIFIER '[' exp ']' ':' vet_dec ';'
   11    | KW_FLOAT TK_IDENTIFIER '[' exp ']' ';'
   12    | KW_CHAR TK_IDENTIFIER '[' exp ']' ':' vet_dec ';'
   13    | KW_CHAR TK_IDENTIFIER '[' exp ']' ';'
   14    | KW_FLOAT '#' TK_IDENTIFIER '=' exp ';'
   15    | KW_CHAR '#' TK_IDENTIFIER '=' exp ';'
   16    | KW_INT '#' TK_IDENTIFIER '=' exp ';'

   17 reset: ',' func_args reset
   18      | %empty

   19 block: '{' lcmd '}'

   20 lcmd: cmd resto

   21 resto: ';' cmd resto
   22      | %empty

   23 fluxControl: KW_IF '(' exp ')' KW_THEN cmd
   24            | KW_IF '(' exp ')' KW_THEN cmd KW_ELSE cmd
   25            | KW_WHILE '(' exp ')' cmd
   26            | KW_FOR '(' TK_IDENTIFIER '=' exp KW_TO exp ')' cmd

   27 cmd: TK_IDENTIFIER '=' exp
   28    | '#' TK_IDENTIFIER '=' exp
   29    | '&' TK_IDENTIFIER '=' exp
   30    | TK_IDENTIFIER '=' '#' exp
   31    | TK_IDENTIFIER '=' '&' exp
   32    | TK_IDENTIFIER '[' exp ']' '=' exp
   33    | '#' TK_IDENTIFIER '[' exp ']' '=' exp
   34    | '&' TK_IDENTIFIER '[' exp ']' '=' exp
   35    | TK_IDENTIFIER '=' '#' exp '[' exp ']'
   36    | TK_IDENTIFIER '=' '&' exp '[' exp ']'
   37    | TK_IDENTIFIER '(' l_func_args reset ')'
   38    | print
   39    | read
   40    | KW_RETURN exp
   41    | fluxControl
   42    | dec
   43    | block
   44    | %empty

   45 lit: LIT_INTEGER
   46    | LIT_REAL
   47    | LIT_CHAR

   48 vet_dec: lit vet_dec
   49        | lit

   50 exp: TK_IDENTIFIER
   51    | TK_IDENTIFIER '[' exp ']'
   52    | LIT_CHAR
   53    | LIT_REAL
   54    | LIT_INTEGER
   55    | exp '+' exp
   56    | exp '-' exp
   57    | exp '*' exp
   58    | exp '/' exp
   59    | exp '<' exp
   60    | exp '>' exp
   61    | '!' exp
   62    | exp OPERATOR_LE exp
   63    | exp OPERATOR_GE exp
   64    | exp OPERATOR_EQ exp
   65    | exp OPERATOR_NE exp
   66    | exp OPERATOR_AND exp
   67    | exp OPERATOR_OR exp
   68    | TK_IDENTIFIER '(' l_func_args reset ')'
   69    | '(' exp ')'

   70 func_args: LIT_REAL
   71          | LIT_CHAR
   72          | LIT_INTEGER
   73          | TK_IDENTIFIER
   74          | '#' TK_IDENTIFIER
   75          | '&' TK_IDENTIFIER

   76 l_func_args: func_args l_func_args
   77            | %empty

   78 func_dec: func_header block

   79 func_header: KW_INT TK_IDENTIFIER '(' l_func_par reset_func_par ')'
   80            | KW_FLOAT TK_IDENTIFIER '(' l_func_par reset_func_par ')'
   81            | KW_CHAR TK_IDENTIFIER '(' l_func_par reset_func_par ')'

   82 func_par: KW_INT TK_IDENTIFIER
   83         | KW_FLOAT TK_IDENTIFIER
   84         | KW_CHAR TK_IDENTIFIER

   85 l_func_par: func_par l_func_par
   86           | %empty

   87 reset_func_par: ',' func_par reset_func_par
   88               | %empty

   89 print: KW_PRINT lpe

   90 pe: LIT_STRING
   91   | TK_IDENTIFIER
   92   | '&' TK_IDENTIFIER
   93   | '#' TK_IDENTIFIER

   94 lpe: pe lpe
   95    | %empty

   96 read: KW_READ TK_IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'!' (33) 61
'#' (35) 14 15 16 28 30 33 35 74 93
'&' (38) 29 31 34 36 75 92
'(' (40) 23 24 25 26 37 68 69 79 80 81
')' (41) 23 24 25 26 37 68 69 79 80 81
'*' (42) 57
'+' (43) 55
',' (44) 17 87
'-' (45) 56
'/' (47) 58
':' (58) 8 10 12
';' (59) 5 6 7 8 9 10 11 12 13 14 15 16 21
'<' (60) 59
'=' (61) 5 6 7 14 15 16 26 27 28 29 30 31 32 33 34 35 36
'>' (62) 60
'[' (91) 8 9 10 11 12 13 32 33 34 35 36 51
']' (93) 8 9 10 11 12 13 32 33 34 35 36 51
'{' (123) 19
'}' (125) 19
error (256)
KW_CHAR (258) 6 12 13 15 81 84
KW_INT (259) 7 8 9 16 79 82
KW_FLOAT (260) 5 10 11 14 80 83
KW_IF (261) 23 24
KW_THEN (262) 23 24
KW_ELSE (263) 24
KW_WHILE (264) 25
KW_FOR (265) 26
KW_READ (266) 96
KW_RETURN (267) 40
KW_PRINT (268) 89
KW_TO (269) 26
OPERATOR_LE (270) 62
OPERATOR_GE (271) 63
OPERATOR_EQ (272) 64
OPERATOR_NE (273) 65
OPERATOR_AND (274) 66
OPERATOR_OR (275) 67
TK_IDENTIFIER (276) 5 6 7 8 9 10 11 12 13 14 15 16 26 27 28 29 30 31
    32 33 34 35 36 37 50 51 68 73 74 75 79 80 81 82 83 84 91 92 93
    96
LIT_INTEGER (277) 45 54 72
LIT_REAL (278) 46 53 70
LIT_CHAR (279) 47 52 71
LIT_STRING (280) 90
TOKEN_ERROR (281)
IFELSE (282)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
ldec (49)
    on left: 2 3, on right: 1 2
dec (50)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 2 42
reset (51)
    on left: 17 18, on right: 17 37 68
block (52)
    on left: 19, on right: 43 78
lcmd (53)
    on left: 20, on right: 19
resto (54)
    on left: 21 22, on right: 20 21
fluxControl (55)
    on left: 23 24 25 26, on right: 41
cmd (56)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44,
    on right: 20 21 23 24 25 26
lit (57)
    on left: 45 46 47, on right: 48 49
vet_dec (58)
    on left: 48 49, on right: 8 10 12 48
exp (59)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
    68 69, on right: 5 6 7 8 9 10 11 12 13 14 15 16 23 24 25 26 27
    28 29 30 31 32 33 34 35 36 40 51 55 56 57 58 59 60 61 62 63 64
    65 66 67 69
func_args (60)
    on left: 70 71 72 73 74 75, on right: 17 76
l_func_args (61)
    on left: 76 77, on right: 37 68 76
func_dec (62)
    on left: 78, on right: 4
func_header (63)
    on left: 79 80 81, on right: 78
func_par (64)
    on left: 82 83 84, on right: 85 87
l_func_par (65)
    on left: 85 86, on right: 79 80 81 85
reset_func_par (66)
    on left: 87 88, on right: 79 80 81 87
print (67)
    on left: 89, on right: 38
pe (68)
    on left: 90 91 92 93, on right: 94
lpe (69)
    on left: 94 95, on right: 89 94
read (70)
    on left: 96, on right: 39


State 0

    0 $accept: . program $end

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 3 (ldec)

    program      go to state 4
    ldec         go to state 5
    dec          go to state 6
    func_dec     go to state 7
    func_header  go to state 8


State 1

    6 dec: KW_CHAR . TK_IDENTIFIER '=' exp ';'
   12    | KW_CHAR . TK_IDENTIFIER '[' exp ']' ':' vet_dec ';'
   13    | KW_CHAR . TK_IDENTIFIER '[' exp ']' ';'
   15    | KW_CHAR . '#' TK_IDENTIFIER '=' exp ';'
   81 func_header: KW_CHAR . TK_IDENTIFIER '(' l_func_par reset_func_par ')'

    TK_IDENTIFIER  shift, and go to state 9
    '#'            shift, and go to state 10


State 2

    7 dec: KW_INT . TK_IDENTIFIER '=' exp ';'
    8    | KW_INT . TK_IDENTIFIER '[' exp ']' ':' vet_dec ';'
    9    | KW_INT . TK_IDENTIFIER '[' exp ']' ';'
   16    | KW_INT . '#' TK_IDENTIFIER '=' exp ';'
   79 func_header: KW_INT . TK_IDENTIFIER '(' l_func_par reset_func_par ')'

    TK_IDENTIFIER  shift, and go to state 11
    '#'            shift, and go to state 12


State 3

    5 dec: KW_FLOAT . TK_IDENTIFIER '=' exp ';'
   10    | KW_FLOAT . TK_IDENTIFIER '[' exp ']' ':' vet_dec ';'
   11    | KW_FLOAT . TK_IDENTIFIER '[' exp ']' ';'
   14    | KW_FLOAT . '#' TK_IDENTIFIER '=' exp ';'
   80 func_header: KW_FLOAT . TK_IDENTIFIER '(' l_func_par reset_func_par ')'

    TK_IDENTIFIER  shift, and go to state 13
    '#'            shift, and go to state 14


State 4

    0 $accept: program . $end

    $end  shift, and go to state 15


State 5

    1 program: ldec .

    $default  reduce using rule 1 (program)


State 6

    2 ldec: dec . ldec

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 3 (ldec)

    ldec         go to state 16
    dec          go to state 6
    func_dec     go to state 7
    func_header  go to state 8


State 7

    4 dec: func_dec .

    $default  reduce using rule 4 (dec)


State 8

   78 func_dec: func_header . block

    '{'  shift, and go to state 17

    block  go to state 18


State 9

    6 dec: KW_CHAR TK_IDENTIFIER . '=' exp ';'
   12    | KW_CHAR TK_IDENTIFIER . '[' exp ']' ':' vet_dec ';'
   13    | KW_CHAR TK_IDENTIFIER . '[' exp ']' ';'
   81 func_header: KW_CHAR TK_IDENTIFIER . '(' l_func_par reset_func_par ')'

    '='  shift, and go to state 19
    '('  shift, and go to state 20
    '['  shift, and go to state 21


State 10

   15 dec: KW_CHAR '#' . TK_IDENTIFIER '=' exp ';'

    TK_IDENTIFIER  shift, and go to state 22


State 11

    7 dec: KW_INT TK_IDENTIFIER . '=' exp ';'
    8    | KW_INT TK_IDENTIFIER . '[' exp ']' ':' vet_dec ';'
    9    | KW_INT TK_IDENTIFIER . '[' exp ']' ';'
   79 func_header: KW_INT TK_IDENTIFIER . '(' l_func_par reset_func_par ')'

    '='  shift, and go to state 23
    '('  shift, and go to state 24
    '['  shift, and go to state 25


State 12

   16 dec: KW_INT '#' . TK_IDENTIFIER '=' exp ';'

    TK_IDENTIFIER  shift, and go to state 26


State 13

    5 dec: KW_FLOAT TK_IDENTIFIER . '=' exp ';'
   10    | KW_FLOAT TK_IDENTIFIER . '[' exp ']' ':' vet_dec ';'
   11    | KW_FLOAT TK_IDENTIFIER . '[' exp ']' ';'
   80 func_header: KW_FLOAT TK_IDENTIFIER . '(' l_func_par reset_func_par ')'

    '='  shift, and go to state 27
    '('  shift, and go to state 28
    '['  shift, and go to state 29


State 14

   14 dec: KW_FLOAT '#' . TK_IDENTIFIER '=' exp ';'

    TK_IDENTIFIER  shift, and go to state 30


State 15

    0 $accept: program $end .

    $default  accept


State 16

    2 ldec: dec ldec .

    $default  reduce using rule 2 (ldec)


State 17

   19 block: '{' . lcmd '}'

    KW_CHAR        shift, and go to state 1
    KW_INT         shift, and go to state 2
    KW_FLOAT       shift, and go to state 3
    KW_IF          shift, and go to state 31
    KW_WHILE       shift, and go to state 32
    KW_FOR         shift, and go to state 33
    KW_READ        shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    KW_PRINT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    '#'            shift, and go to state 38
    '{'            shift, and go to state 17
    '&'            shift, and go to state 39

    $default  reduce using rule 44 (cmd)

    dec          go to state 40
    block        go to state 41
    lcmd         go to state 42
    fluxControl  go to state 43
    cmd          go to state 44
    func_dec     go to state 7
    func_header  go to state 8
    print        go to state 45
    read         go to state 46


State 18

   78 func_dec: func_header block .

    $default  reduce using rule 78 (func_dec)


State 19

    6 dec: KW_CHAR TK_IDENTIFIER '=' . exp ';'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 53


State 20

   81 func_header: KW_CHAR TK_IDENTIFIER '(' . l_func_par reset_func_par ')'

    KW_CHAR   shift, and go to state 54
    KW_INT    shift, and go to state 55
    KW_FLOAT  shift, and go to state 56

    $default  reduce using rule 86 (l_func_par)

    func_par    go to state 57
    l_func_par  go to state 58


State 21

   12 dec: KW_CHAR TK_IDENTIFIER '[' . exp ']' ':' vet_dec ';'
   13    | KW_CHAR TK_IDENTIFIER '[' . exp ']' ';'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 59


State 22

   15 dec: KW_CHAR '#' TK_IDENTIFIER . '=' exp ';'

    '='  shift, and go to state 60


State 23

    7 dec: KW_INT TK_IDENTIFIER '=' . exp ';'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 61


State 24

   79 func_header: KW_INT TK_IDENTIFIER '(' . l_func_par reset_func_par ')'

    KW_CHAR   shift, and go to state 54
    KW_INT    shift, and go to state 55
    KW_FLOAT  shift, and go to state 56

    $default  reduce using rule 86 (l_func_par)

    func_par    go to state 57
    l_func_par  go to state 62


State 25

    8 dec: KW_INT TK_IDENTIFIER '[' . exp ']' ':' vet_dec ';'
    9    | KW_INT TK_IDENTIFIER '[' . exp ']' ';'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 63


State 26

   16 dec: KW_INT '#' TK_IDENTIFIER . '=' exp ';'

    '='  shift, and go to state 64


State 27

    5 dec: KW_FLOAT TK_IDENTIFIER '=' . exp ';'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 65


State 28

   80 func_header: KW_FLOAT TK_IDENTIFIER '(' . l_func_par reset_func_par ')'

    KW_CHAR   shift, and go to state 54
    KW_INT    shift, and go to state 55
    KW_FLOAT  shift, and go to state 56

    $default  reduce using rule 86 (l_func_par)

    func_par    go to state 57
    l_func_par  go to state 66


State 29

   10 dec: KW_FLOAT TK_IDENTIFIER '[' . exp ']' ':' vet_dec ';'
   11    | KW_FLOAT TK_IDENTIFIER '[' . exp ']' ';'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 67


State 30

   14 dec: KW_FLOAT '#' TK_IDENTIFIER . '=' exp ';'

    '='  shift, and go to state 68


State 31

   23 fluxControl: KW_IF . '(' exp ')' KW_THEN cmd
   24            | KW_IF . '(' exp ')' KW_THEN cmd KW_ELSE cmd

    '('  shift, and go to state 69


State 32

   25 fluxControl: KW_WHILE . '(' exp ')' cmd

    '('  shift, and go to state 70


State 33

   26 fluxControl: KW_FOR . '(' TK_IDENTIFIER '=' exp KW_TO exp ')' cmd

    '('  shift, and go to state 71


State 34

   96 read: KW_READ . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 72


State 35

   40 cmd: KW_RETURN . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 73


State 36

   89 print: KW_PRINT . lpe

    TK_IDENTIFIER  shift, and go to state 74
    LIT_STRING     shift, and go to state 75
    '#'            shift, and go to state 76
    '&'            shift, and go to state 77

    $default  reduce using rule 95 (lpe)

    pe   go to state 78
    lpe  go to state 79


State 37

   27 cmd: TK_IDENTIFIER . '=' exp
   30    | TK_IDENTIFIER . '=' '#' exp
   31    | TK_IDENTIFIER . '=' '&' exp
   32    | TK_IDENTIFIER . '[' exp ']' '=' exp
   35    | TK_IDENTIFIER . '=' '#' exp '[' exp ']'
   36    | TK_IDENTIFIER . '=' '&' exp '[' exp ']'
   37    | TK_IDENTIFIER . '(' l_func_args reset ')'

    '='  shift, and go to state 80
    '('  shift, and go to state 81
    '['  shift, and go to state 82


State 38

   28 cmd: '#' . TK_IDENTIFIER '=' exp
   33    | '#' . TK_IDENTIFIER '[' exp ']' '=' exp

    TK_IDENTIFIER  shift, and go to state 83


State 39

   29 cmd: '&' . TK_IDENTIFIER '=' exp
   34    | '&' . TK_IDENTIFIER '[' exp ']' '=' exp

    TK_IDENTIFIER  shift, and go to state 84


State 40

   42 cmd: dec .

    $default  reduce using rule 42 (cmd)


State 41

   43 cmd: block .

    $default  reduce using rule 43 (cmd)


State 42

   19 block: '{' lcmd . '}'

    '}'  shift, and go to state 85


State 43

   41 cmd: fluxControl .

    $default  reduce using rule 41 (cmd)


State 44

   20 lcmd: cmd . resto

    ';'  shift, and go to state 86

    $default  reduce using rule 22 (resto)

    resto  go to state 87


State 45

   38 cmd: print .

    $default  reduce using rule 38 (cmd)


State 46

   39 cmd: read .

    $default  reduce using rule 39 (cmd)


State 47

   50 exp: TK_IDENTIFIER .
   51    | TK_IDENTIFIER . '[' exp ']'
   68    | TK_IDENTIFIER . '(' l_func_args reset ')'

    '('  shift, and go to state 88
    '['  shift, and go to state 89

    '['       [reduce using rule 50 (exp)]
    $default  reduce using rule 50 (exp)


State 48

   54 exp: LIT_INTEGER .

    $default  reduce using rule 54 (exp)


State 49

   53 exp: LIT_REAL .

    $default  reduce using rule 53 (exp)


State 50

   52 exp: LIT_CHAR .

    $default  reduce using rule 52 (exp)


State 51

   61 exp: '!' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 90


State 52

   69 exp: '(' . exp ')'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 91


State 53

    6 dec: KW_CHAR TK_IDENTIFIER '=' exp . ';'
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ';'           shift, and go to state 104


State 54

   84 func_par: KW_CHAR . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 105


State 55

   82 func_par: KW_INT . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 106


State 56

   83 func_par: KW_FLOAT . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 107


State 57

   85 l_func_par: func_par . l_func_par

    KW_CHAR   shift, and go to state 54
    KW_INT    shift, and go to state 55
    KW_FLOAT  shift, and go to state 56

    $default  reduce using rule 86 (l_func_par)

    func_par    go to state 57
    l_func_par  go to state 108


State 58

   81 func_header: KW_CHAR TK_IDENTIFIER '(' l_func_par . reset_func_par ')'

    ','  shift, and go to state 109

    $default  reduce using rule 88 (reset_func_par)

    reset_func_par  go to state 110


State 59

   12 dec: KW_CHAR TK_IDENTIFIER '[' exp . ']' ':' vet_dec ';'
   13    | KW_CHAR TK_IDENTIFIER '[' exp . ']' ';'
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ']'           shift, and go to state 111


State 60

   15 dec: KW_CHAR '#' TK_IDENTIFIER '=' . exp ';'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 112


State 61

    7 dec: KW_INT TK_IDENTIFIER '=' exp . ';'
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ';'           shift, and go to state 113


State 62

   79 func_header: KW_INT TK_IDENTIFIER '(' l_func_par . reset_func_par ')'

    ','  shift, and go to state 109

    $default  reduce using rule 88 (reset_func_par)

    reset_func_par  go to state 114


State 63

    8 dec: KW_INT TK_IDENTIFIER '[' exp . ']' ':' vet_dec ';'
    9    | KW_INT TK_IDENTIFIER '[' exp . ']' ';'
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ']'           shift, and go to state 115


State 64

   16 dec: KW_INT '#' TK_IDENTIFIER '=' . exp ';'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 116


State 65

    5 dec: KW_FLOAT TK_IDENTIFIER '=' exp . ';'
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ';'           shift, and go to state 117


State 66

   80 func_header: KW_FLOAT TK_IDENTIFIER '(' l_func_par . reset_func_par ')'

    ','  shift, and go to state 109

    $default  reduce using rule 88 (reset_func_par)

    reset_func_par  go to state 118


State 67

   10 dec: KW_FLOAT TK_IDENTIFIER '[' exp . ']' ':' vet_dec ';'
   11    | KW_FLOAT TK_IDENTIFIER '[' exp . ']' ';'
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ']'           shift, and go to state 119


State 68

   14 dec: KW_FLOAT '#' TK_IDENTIFIER '=' . exp ';'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 120


State 69

   23 fluxControl: KW_IF '(' . exp ')' KW_THEN cmd
   24            | KW_IF '(' . exp ')' KW_THEN cmd KW_ELSE cmd

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 121


State 70

   25 fluxControl: KW_WHILE '(' . exp ')' cmd

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 122


State 71

   26 fluxControl: KW_FOR '(' . TK_IDENTIFIER '=' exp KW_TO exp ')' cmd

    TK_IDENTIFIER  shift, and go to state 123


State 72

   96 read: KW_READ TK_IDENTIFIER .

    $default  reduce using rule 96 (read)


State 73

   40 cmd: KW_RETURN exp .
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103

    $default  reduce using rule 40 (cmd)


State 74

   91 pe: TK_IDENTIFIER .

    $default  reduce using rule 91 (pe)


State 75

   90 pe: LIT_STRING .

    $default  reduce using rule 90 (pe)


State 76

   93 pe: '#' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 124


State 77

   92 pe: '&' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 125


State 78

   94 lpe: pe . lpe

    TK_IDENTIFIER  shift, and go to state 74
    LIT_STRING     shift, and go to state 75
    '#'            shift, and go to state 76
    '&'            shift, and go to state 77

    $default  reduce using rule 95 (lpe)

    pe   go to state 78
    lpe  go to state 126


State 79

   89 print: KW_PRINT lpe .

    $default  reduce using rule 89 (print)


State 80

   27 cmd: TK_IDENTIFIER '=' . exp
   30    | TK_IDENTIFIER '=' . '#' exp
   31    | TK_IDENTIFIER '=' . '&' exp
   35    | TK_IDENTIFIER '=' . '#' exp '[' exp ']'
   36    | TK_IDENTIFIER '=' . '&' exp '[' exp ']'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52
    '#'            shift, and go to state 127
    '&'            shift, and go to state 128

    exp  go to state 129


State 81

   37 cmd: TK_IDENTIFIER '(' . l_func_args reset ')'

    TK_IDENTIFIER  shift, and go to state 130
    LIT_INTEGER    shift, and go to state 131
    LIT_REAL       shift, and go to state 132
    LIT_CHAR       shift, and go to state 133
    '#'            shift, and go to state 134
    '&'            shift, and go to state 135

    $default  reduce using rule 77 (l_func_args)

    func_args    go to state 136
    l_func_args  go to state 137


State 82

   32 cmd: TK_IDENTIFIER '[' . exp ']' '=' exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 138


State 83

   28 cmd: '#' TK_IDENTIFIER . '=' exp
   33    | '#' TK_IDENTIFIER . '[' exp ']' '=' exp

    '='  shift, and go to state 139
    '['  shift, and go to state 140


State 84

   29 cmd: '&' TK_IDENTIFIER . '=' exp
   34    | '&' TK_IDENTIFIER . '[' exp ']' '=' exp

    '='  shift, and go to state 141
    '['  shift, and go to state 142


State 85

   19 block: '{' lcmd '}' .

    $default  reduce using rule 19 (block)


State 86

   21 resto: ';' . cmd resto

    KW_CHAR        shift, and go to state 1
    KW_INT         shift, and go to state 2
    KW_FLOAT       shift, and go to state 3
    KW_IF          shift, and go to state 31
    KW_WHILE       shift, and go to state 32
    KW_FOR         shift, and go to state 33
    KW_READ        shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    KW_PRINT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    '#'            shift, and go to state 38
    '{'            shift, and go to state 17
    '&'            shift, and go to state 39

    $default  reduce using rule 44 (cmd)

    dec          go to state 40
    block        go to state 41
    fluxControl  go to state 43
    cmd          go to state 143
    func_dec     go to state 7
    func_header  go to state 8
    print        go to state 45
    read         go to state 46


State 87

   20 lcmd: cmd resto .

    $default  reduce using rule 20 (lcmd)


State 88

   68 exp: TK_IDENTIFIER '(' . l_func_args reset ')'

    TK_IDENTIFIER  shift, and go to state 130
    LIT_INTEGER    shift, and go to state 131
    LIT_REAL       shift, and go to state 132
    LIT_CHAR       shift, and go to state 133
    '#'            shift, and go to state 134
    '&'            shift, and go to state 135

    $default  reduce using rule 77 (l_func_args)

    func_args    go to state 136
    l_func_args  go to state 144


State 89

   51 exp: TK_IDENTIFIER '[' . exp ']'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 145


State 90

   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   61    | '!' exp .
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103

    $default  reduce using rule 61 (exp)


State 91

   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp
   69    | '(' exp . ')'

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ')'           shift, and go to state 146


State 92

   62 exp: exp OPERATOR_LE . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 147


State 93

   63 exp: exp OPERATOR_GE . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 148


State 94

   64 exp: exp OPERATOR_EQ . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 149


State 95

   65 exp: exp OPERATOR_NE . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 150


State 96

   66 exp: exp OPERATOR_AND . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 151


State 97

   67 exp: exp OPERATOR_OR . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 152


State 98

   59 exp: exp '<' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 153


State 99

   60 exp: exp '>' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 154


State 100

   55 exp: exp '+' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 155


State 101

   56 exp: exp '-' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 156


State 102

   57 exp: exp '*' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 157


State 103

   58 exp: exp '/' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 158


State 104

    6 dec: KW_CHAR TK_IDENTIFIER '=' exp ';' .

    $default  reduce using rule 6 (dec)


State 105

   84 func_par: KW_CHAR TK_IDENTIFIER .

    $default  reduce using rule 84 (func_par)


State 106

   82 func_par: KW_INT TK_IDENTIFIER .

    $default  reduce using rule 82 (func_par)


State 107

   83 func_par: KW_FLOAT TK_IDENTIFIER .

    $default  reduce using rule 83 (func_par)


State 108

   85 l_func_par: func_par l_func_par .

    $default  reduce using rule 85 (l_func_par)


State 109

   87 reset_func_par: ',' . func_par reset_func_par

    KW_CHAR   shift, and go to state 54
    KW_INT    shift, and go to state 55
    KW_FLOAT  shift, and go to state 56

    func_par  go to state 159


State 110

   81 func_header: KW_CHAR TK_IDENTIFIER '(' l_func_par reset_func_par . ')'

    ')'  shift, and go to state 160


State 111

   12 dec: KW_CHAR TK_IDENTIFIER '[' exp ']' . ':' vet_dec ';'
   13    | KW_CHAR TK_IDENTIFIER '[' exp ']' . ';'

    ';'  shift, and go to state 161
    ':'  shift, and go to state 162


State 112

   15 dec: KW_CHAR '#' TK_IDENTIFIER '=' exp . ';'
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ';'           shift, and go to state 163


State 113

    7 dec: KW_INT TK_IDENTIFIER '=' exp ';' .

    $default  reduce using rule 7 (dec)


State 114

   79 func_header: KW_INT TK_IDENTIFIER '(' l_func_par reset_func_par . ')'

    ')'  shift, and go to state 164


State 115

    8 dec: KW_INT TK_IDENTIFIER '[' exp ']' . ':' vet_dec ';'
    9    | KW_INT TK_IDENTIFIER '[' exp ']' . ';'

    ';'  shift, and go to state 165
    ':'  shift, and go to state 166


State 116

   16 dec: KW_INT '#' TK_IDENTIFIER '=' exp . ';'
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ';'           shift, and go to state 167


State 117

    5 dec: KW_FLOAT TK_IDENTIFIER '=' exp ';' .

    $default  reduce using rule 5 (dec)


State 118

   80 func_header: KW_FLOAT TK_IDENTIFIER '(' l_func_par reset_func_par . ')'

    ')'  shift, and go to state 168


State 119

   10 dec: KW_FLOAT TK_IDENTIFIER '[' exp ']' . ':' vet_dec ';'
   11    | KW_FLOAT TK_IDENTIFIER '[' exp ']' . ';'

    ';'  shift, and go to state 169
    ':'  shift, and go to state 170


State 120

   14 dec: KW_FLOAT '#' TK_IDENTIFIER '=' exp . ';'
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ';'           shift, and go to state 171


State 121

   23 fluxControl: KW_IF '(' exp . ')' KW_THEN cmd
   24            | KW_IF '(' exp . ')' KW_THEN cmd KW_ELSE cmd
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ')'           shift, and go to state 172


State 122

   25 fluxControl: KW_WHILE '(' exp . ')' cmd
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ')'           shift, and go to state 173


State 123

   26 fluxControl: KW_FOR '(' TK_IDENTIFIER . '=' exp KW_TO exp ')' cmd

    '='  shift, and go to state 174


State 124

   93 pe: '#' TK_IDENTIFIER .

    $default  reduce using rule 93 (pe)


State 125

   92 pe: '&' TK_IDENTIFIER .

    $default  reduce using rule 92 (pe)


State 126

   94 lpe: pe lpe .

    $default  reduce using rule 94 (lpe)


State 127

   30 cmd: TK_IDENTIFIER '=' '#' . exp
   35    | TK_IDENTIFIER '=' '#' . exp '[' exp ']'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 175


State 128

   31 cmd: TK_IDENTIFIER '=' '&' . exp
   36    | TK_IDENTIFIER '=' '&' . exp '[' exp ']'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 176


State 129

   27 cmd: TK_IDENTIFIER '=' exp .
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103

    $default  reduce using rule 27 (cmd)


State 130

   73 func_args: TK_IDENTIFIER .

    $default  reduce using rule 73 (func_args)


State 131

   72 func_args: LIT_INTEGER .

    $default  reduce using rule 72 (func_args)


State 132

   70 func_args: LIT_REAL .

    $default  reduce using rule 70 (func_args)


State 133

   71 func_args: LIT_CHAR .

    $default  reduce using rule 71 (func_args)


State 134

   74 func_args: '#' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 177


State 135

   75 func_args: '&' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 178


State 136

   76 l_func_args: func_args . l_func_args

    TK_IDENTIFIER  shift, and go to state 130
    LIT_INTEGER    shift, and go to state 131
    LIT_REAL       shift, and go to state 132
    LIT_CHAR       shift, and go to state 133
    '#'            shift, and go to state 134
    '&'            shift, and go to state 135

    $default  reduce using rule 77 (l_func_args)

    func_args    go to state 136
    l_func_args  go to state 179


State 137

   37 cmd: TK_IDENTIFIER '(' l_func_args . reset ')'

    ','  shift, and go to state 180

    $default  reduce using rule 18 (reset)

    reset  go to state 181


State 138

   32 cmd: TK_IDENTIFIER '[' exp . ']' '=' exp
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ']'           shift, and go to state 182


State 139

   28 cmd: '#' TK_IDENTIFIER '=' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 183


State 140

   33 cmd: '#' TK_IDENTIFIER '[' . exp ']' '=' exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 184


State 141

   29 cmd: '&' TK_IDENTIFIER '=' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 185


State 142

   34 cmd: '&' TK_IDENTIFIER '[' . exp ']' '=' exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 186


State 143

   21 resto: ';' cmd . resto

    ';'  shift, and go to state 86

    $default  reduce using rule 22 (resto)

    resto  go to state 187


State 144

   68 exp: TK_IDENTIFIER '(' l_func_args . reset ')'

    ','  shift, and go to state 180

    $default  reduce using rule 18 (reset)

    reset  go to state 188


State 145

   51 exp: TK_IDENTIFIER '[' exp . ']'
   55    | exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ']'           shift, and go to state 189


State 146

   69 exp: '(' exp ')' .

    $default  reduce using rule 69 (exp)


State 147

   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   62    | exp OPERATOR_LE exp .
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103

    $default  reduce using rule 62 (exp)


State 148

   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   63    | exp OPERATOR_GE exp .
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103

    $default  reduce using rule 63 (exp)


State 149

   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   64    | exp OPERATOR_EQ exp .
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103

    $default  reduce using rule 64 (exp)


State 150

   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   65    | exp OPERATOR_NE exp .
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103

    $default  reduce using rule 65 (exp)


State 151

   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   66    | exp OPERATOR_AND exp .
   67    | exp . OPERATOR_OR exp

    '+'  shift, and go to state 100
    '-'  shift, and go to state 101
    '*'  shift, and go to state 102
    '/'  shift, and go to state 103

    $default  reduce using rule 66 (exp)


State 152

   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp
   67    | exp OPERATOR_OR exp .

    '+'  shift, and go to state 100
    '-'  shift, and go to state 101
    '*'  shift, and go to state 102
    '/'  shift, and go to state 103

    $default  reduce using rule 67 (exp)


State 153

   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   59    | exp '<' exp .
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103

    $default  reduce using rule 59 (exp)


State 154

   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   60    | exp '>' exp .
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103

    $default  reduce using rule 60 (exp)


State 155

   55 exp: exp . '+' exp
   55    | exp '+' exp .
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    '*'  shift, and go to state 102
    '/'  shift, and go to state 103

    $default  reduce using rule 55 (exp)


State 156

   55 exp: exp . '+' exp
   56    | exp . '-' exp
   56    | exp '-' exp .
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    '*'  shift, and go to state 102
    '/'  shift, and go to state 103

    $default  reduce using rule 56 (exp)


State 157

   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   57    | exp '*' exp .
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    '/'  shift, and go to state 103

    $default  reduce using rule 57 (exp)


State 158

   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   58    | exp '/' exp .
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    $default  reduce using rule 58 (exp)


State 159

   87 reset_func_par: ',' func_par . reset_func_par

    ','  shift, and go to state 109

    $default  reduce using rule 88 (reset_func_par)

    reset_func_par  go to state 190


State 160

   81 func_header: KW_CHAR TK_IDENTIFIER '(' l_func_par reset_func_par ')' .

    $default  reduce using rule 81 (func_header)


State 161

   13 dec: KW_CHAR TK_IDENTIFIER '[' exp ']' ';' .

    $default  reduce using rule 13 (dec)


State 162

   12 dec: KW_CHAR TK_IDENTIFIER '[' exp ']' ':' . vet_dec ';'

    LIT_INTEGER  shift, and go to state 191
    LIT_REAL     shift, and go to state 192
    LIT_CHAR     shift, and go to state 193

    lit      go to state 194
    vet_dec  go to state 195


State 163

   15 dec: KW_CHAR '#' TK_IDENTIFIER '=' exp ';' .

    $default  reduce using rule 15 (dec)


State 164

   79 func_header: KW_INT TK_IDENTIFIER '(' l_func_par reset_func_par ')' .

    $default  reduce using rule 79 (func_header)


State 165

    9 dec: KW_INT TK_IDENTIFIER '[' exp ']' ';' .

    $default  reduce using rule 9 (dec)


State 166

    8 dec: KW_INT TK_IDENTIFIER '[' exp ']' ':' . vet_dec ';'

    LIT_INTEGER  shift, and go to state 191
    LIT_REAL     shift, and go to state 192
    LIT_CHAR     shift, and go to state 193

    lit      go to state 194
    vet_dec  go to state 196


State 167

   16 dec: KW_INT '#' TK_IDENTIFIER '=' exp ';' .

    $default  reduce using rule 16 (dec)


State 168

   80 func_header: KW_FLOAT TK_IDENTIFIER '(' l_func_par reset_func_par ')' .

    $default  reduce using rule 80 (func_header)


State 169

   11 dec: KW_FLOAT TK_IDENTIFIER '[' exp ']' ';' .

    $default  reduce using rule 11 (dec)


State 170

   10 dec: KW_FLOAT TK_IDENTIFIER '[' exp ']' ':' . vet_dec ';'

    LIT_INTEGER  shift, and go to state 191
    LIT_REAL     shift, and go to state 192
    LIT_CHAR     shift, and go to state 193

    lit      go to state 194
    vet_dec  go to state 197


State 171

   14 dec: KW_FLOAT '#' TK_IDENTIFIER '=' exp ';' .

    $default  reduce using rule 14 (dec)


State 172

   23 fluxControl: KW_IF '(' exp ')' . KW_THEN cmd
   24            | KW_IF '(' exp ')' . KW_THEN cmd KW_ELSE cmd

    KW_THEN  shift, and go to state 198


State 173

   25 fluxControl: KW_WHILE '(' exp ')' . cmd

    KW_CHAR        shift, and go to state 1
    KW_INT         shift, and go to state 2
    KW_FLOAT       shift, and go to state 3
    KW_IF          shift, and go to state 31
    KW_WHILE       shift, and go to state 32
    KW_FOR         shift, and go to state 33
    KW_READ        shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    KW_PRINT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    '#'            shift, and go to state 38
    '{'            shift, and go to state 17
    '&'            shift, and go to state 39

    $default  reduce using rule 44 (cmd)

    dec          go to state 40
    block        go to state 41
    fluxControl  go to state 43
    cmd          go to state 199
    func_dec     go to state 7
    func_header  go to state 8
    print        go to state 45
    read         go to state 46


State 174

   26 fluxControl: KW_FOR '(' TK_IDENTIFIER '=' . exp KW_TO exp ')' cmd

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 200


State 175

   30 cmd: TK_IDENTIFIER '=' '#' exp .
   35    | TK_IDENTIFIER '=' '#' exp . '[' exp ']'
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    '['           shift, and go to state 201

    $default  reduce using rule 30 (cmd)


State 176

   31 cmd: TK_IDENTIFIER '=' '&' exp .
   36    | TK_IDENTIFIER '=' '&' exp . '[' exp ']'
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    '['           shift, and go to state 202

    $default  reduce using rule 31 (cmd)


State 177

   74 func_args: '#' TK_IDENTIFIER .

    $default  reduce using rule 74 (func_args)


State 178

   75 func_args: '&' TK_IDENTIFIER .

    $default  reduce using rule 75 (func_args)


State 179

   76 l_func_args: func_args l_func_args .

    $default  reduce using rule 76 (l_func_args)


State 180

   17 reset: ',' . func_args reset

    TK_IDENTIFIER  shift, and go to state 130
    LIT_INTEGER    shift, and go to state 131
    LIT_REAL       shift, and go to state 132
    LIT_CHAR       shift, and go to state 133
    '#'            shift, and go to state 134
    '&'            shift, and go to state 135

    func_args  go to state 203


State 181

   37 cmd: TK_IDENTIFIER '(' l_func_args reset . ')'

    ')'  shift, and go to state 204


State 182

   32 cmd: TK_IDENTIFIER '[' exp ']' . '=' exp

    '='  shift, and go to state 205


State 183

   28 cmd: '#' TK_IDENTIFIER '=' exp .
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103

    $default  reduce using rule 28 (cmd)


State 184

   33 cmd: '#' TK_IDENTIFIER '[' exp . ']' '=' exp
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ']'           shift, and go to state 206


State 185

   29 cmd: '&' TK_IDENTIFIER '=' exp .
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103

    $default  reduce using rule 29 (cmd)


State 186

   34 cmd: '&' TK_IDENTIFIER '[' exp . ']' '=' exp
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ']'           shift, and go to state 207


State 187

   21 resto: ';' cmd resto .

    $default  reduce using rule 21 (resto)


State 188

   68 exp: TK_IDENTIFIER '(' l_func_args reset . ')'

    ')'  shift, and go to state 208


State 189

   51 exp: TK_IDENTIFIER '[' exp ']' .

    $default  reduce using rule 51 (exp)


State 190

   87 reset_func_par: ',' func_par reset_func_par .

    $default  reduce using rule 87 (reset_func_par)


State 191

   45 lit: LIT_INTEGER .

    $default  reduce using rule 45 (lit)


State 192

   46 lit: LIT_REAL .

    $default  reduce using rule 46 (lit)


State 193

   47 lit: LIT_CHAR .

    $default  reduce using rule 47 (lit)


State 194

   48 vet_dec: lit . vet_dec
   49        | lit .

    LIT_INTEGER  shift, and go to state 191
    LIT_REAL     shift, and go to state 192
    LIT_CHAR     shift, and go to state 193

    $default  reduce using rule 49 (vet_dec)

    lit      go to state 194
    vet_dec  go to state 209


State 195

   12 dec: KW_CHAR TK_IDENTIFIER '[' exp ']' ':' vet_dec . ';'

    ';'  shift, and go to state 210


State 196

    8 dec: KW_INT TK_IDENTIFIER '[' exp ']' ':' vet_dec . ';'

    ';'  shift, and go to state 211


State 197

   10 dec: KW_FLOAT TK_IDENTIFIER '[' exp ']' ':' vet_dec . ';'

    ';'  shift, and go to state 212


State 198

   23 fluxControl: KW_IF '(' exp ')' KW_THEN . cmd
   24            | KW_IF '(' exp ')' KW_THEN . cmd KW_ELSE cmd

    KW_CHAR        shift, and go to state 1
    KW_INT         shift, and go to state 2
    KW_FLOAT       shift, and go to state 3
    KW_IF          shift, and go to state 31
    KW_WHILE       shift, and go to state 32
    KW_FOR         shift, and go to state 33
    KW_READ        shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    KW_PRINT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    '#'            shift, and go to state 38
    '{'            shift, and go to state 17
    '&'            shift, and go to state 39

    $default  reduce using rule 44 (cmd)

    dec          go to state 40
    block        go to state 41
    fluxControl  go to state 43
    cmd          go to state 213
    func_dec     go to state 7
    func_header  go to state 8
    print        go to state 45
    read         go to state 46


State 199

   25 fluxControl: KW_WHILE '(' exp ')' cmd .

    $default  reduce using rule 25 (fluxControl)


State 200

   26 fluxControl: KW_FOR '(' TK_IDENTIFIER '=' exp . KW_TO exp ')' cmd
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    KW_TO         shift, and go to state 214
    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103


State 201

   35 cmd: TK_IDENTIFIER '=' '#' exp '[' . exp ']'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 215


State 202

   36 cmd: TK_IDENTIFIER '=' '&' exp '[' . exp ']'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 216


State 203

   17 reset: ',' func_args . reset

    ','  shift, and go to state 180

    $default  reduce using rule 18 (reset)

    reset  go to state 217


State 204

   37 cmd: TK_IDENTIFIER '(' l_func_args reset ')' .

    $default  reduce using rule 37 (cmd)


State 205

   32 cmd: TK_IDENTIFIER '[' exp ']' '=' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 218


State 206

   33 cmd: '#' TK_IDENTIFIER '[' exp ']' . '=' exp

    '='  shift, and go to state 219


State 207

   34 cmd: '&' TK_IDENTIFIER '[' exp ']' . '=' exp

    '='  shift, and go to state 220


State 208

   68 exp: TK_IDENTIFIER '(' l_func_args reset ')' .

    $default  reduce using rule 68 (exp)


State 209

   48 vet_dec: lit vet_dec .

    $default  reduce using rule 48 (vet_dec)


State 210

   12 dec: KW_CHAR TK_IDENTIFIER '[' exp ']' ':' vet_dec ';' .

    $default  reduce using rule 12 (dec)


State 211

    8 dec: KW_INT TK_IDENTIFIER '[' exp ']' ':' vet_dec ';' .

    $default  reduce using rule 8 (dec)


State 212

   10 dec: KW_FLOAT TK_IDENTIFIER '[' exp ']' ':' vet_dec ';' .

    $default  reduce using rule 10 (dec)


State 213

   23 fluxControl: KW_IF '(' exp ')' KW_THEN cmd .
   24            | KW_IF '(' exp ')' KW_THEN cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 221

    KW_ELSE   [reduce using rule 23 (fluxControl)]
    $default  reduce using rule 23 (fluxControl)


State 214

   26 fluxControl: KW_FOR '(' TK_IDENTIFIER '=' exp KW_TO . exp ')' cmd

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 222


State 215

   35 cmd: TK_IDENTIFIER '=' '#' exp '[' exp . ']'
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ']'           shift, and go to state 223


State 216

   36 cmd: TK_IDENTIFIER '=' '&' exp '[' exp . ']'
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ']'           shift, and go to state 224


State 217

   17 reset: ',' func_args reset .

    $default  reduce using rule 17 (reset)


State 218

   32 cmd: TK_IDENTIFIER '[' exp ']' '=' exp .
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103

    $default  reduce using rule 32 (cmd)


State 219

   33 cmd: '#' TK_IDENTIFIER '[' exp ']' '=' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 225


State 220

   34 cmd: '&' TK_IDENTIFIER '[' exp ']' '=' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 48
    LIT_REAL       shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '!'            shift, and go to state 51
    '('            shift, and go to state 52

    exp  go to state 226


State 221

   24 fluxControl: KW_IF '(' exp ')' KW_THEN cmd KW_ELSE . cmd

    KW_CHAR        shift, and go to state 1
    KW_INT         shift, and go to state 2
    KW_FLOAT       shift, and go to state 3
    KW_IF          shift, and go to state 31
    KW_WHILE       shift, and go to state 32
    KW_FOR         shift, and go to state 33
    KW_READ        shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    KW_PRINT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    '#'            shift, and go to state 38
    '{'            shift, and go to state 17
    '&'            shift, and go to state 39

    $default  reduce using rule 44 (cmd)

    dec          go to state 40
    block        go to state 41
    fluxControl  go to state 43
    cmd          go to state 227
    func_dec     go to state 7
    func_header  go to state 8
    print        go to state 45
    read         go to state 46


State 222

   26 fluxControl: KW_FOR '(' TK_IDENTIFIER '=' exp KW_TO exp . ')' cmd
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103
    ')'           shift, and go to state 228


State 223

   35 cmd: TK_IDENTIFIER '=' '#' exp '[' exp ']' .

    $default  reduce using rule 35 (cmd)


State 224

   36 cmd: TK_IDENTIFIER '=' '&' exp '[' exp ']' .

    $default  reduce using rule 36 (cmd)


State 225

   33 cmd: '#' TK_IDENTIFIER '[' exp ']' '=' exp .
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103

    $default  reduce using rule 33 (cmd)


State 226

   34 cmd: '&' TK_IDENTIFIER '[' exp ']' '=' exp .
   55 exp: exp . '+' exp
   56    | exp . '-' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '<' exp
   60    | exp . '>' exp
   62    | exp . OPERATOR_LE exp
   63    | exp . OPERATOR_GE exp
   64    | exp . OPERATOR_EQ exp
   65    | exp . OPERATOR_NE exp
   66    | exp . OPERATOR_AND exp
   67    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 92
    OPERATOR_GE   shift, and go to state 93
    OPERATOR_EQ   shift, and go to state 94
    OPERATOR_NE   shift, and go to state 95
    OPERATOR_AND  shift, and go to state 96
    OPERATOR_OR   shift, and go to state 97
    '<'           shift, and go to state 98
    '>'           shift, and go to state 99
    '+'           shift, and go to state 100
    '-'           shift, and go to state 101
    '*'           shift, and go to state 102
    '/'           shift, and go to state 103

    $default  reduce using rule 34 (cmd)


State 227

   24 fluxControl: KW_IF '(' exp ')' KW_THEN cmd KW_ELSE cmd .

    $default  reduce using rule 24 (fluxControl)


State 228

   26 fluxControl: KW_FOR '(' TK_IDENTIFIER '=' exp KW_TO exp ')' . cmd

    KW_CHAR        shift, and go to state 1
    KW_INT         shift, and go to state 2
    KW_FLOAT       shift, and go to state 3
    KW_IF          shift, and go to state 31
    KW_WHILE       shift, and go to state 32
    KW_FOR         shift, and go to state 33
    KW_READ        shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    KW_PRINT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    '#'            shift, and go to state 38
    '{'            shift, and go to state 17
    '&'            shift, and go to state 39

    $default  reduce using rule 44 (cmd)

    dec          go to state 40
    block        go to state 41
    fluxControl  go to state 43
    cmd          go to state 229
    func_dec     go to state 7
    func_header  go to state 8
    print        go to state 45
    read         go to state 46


State 229

   26 fluxControl: KW_FOR '(' TK_IDENTIFIER '=' exp KW_TO exp ')' cmd .

    $default  reduce using rule 26 (fluxControl)
