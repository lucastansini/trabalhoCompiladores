Nonterminals useless in grammar

   vet_dec


Terminals unused in grammar

   KW_CHAR
   KW_INT
   KW_FLOAT
   TOKEN_ERROR
   ':'


Rules useless in grammar

   82 dec: KW_INT TK_IDENTIFIER '[' exp ']' ':' vet_dec ';'
   83    | KW_INT TK_IDENTIFIER '[' exp ']' ';' vet_dec ';'
   84    | KW_FLOAT TK_IDENTIFIER '[' exp ']' ':' vet_dec ';'
   85    | KW_FLOAT TK_IDENTIFIER '[' exp ']' ';' vet_dec ';'
   86    | KW_CHAR TK_IDENTIFIER '[' exp ']' ':' vet_dec ';'
   87    | KW_CHAR TK_IDENTIFIER '[' exp ']' ';' vet_dec ';'

   88 vet_dec: KW_FLOAT vet_dec
   89        | KW_CHAR vet_dec
   90        | KW_INT vet_dec


State 22 conflicts: 1 shift/reduce
State 36 conflicts: 3 shift/reduce
State 63 conflicts: 6 shift/reduce
State 78 conflicts: 3 shift/reduce
State 86 conflicts: 13 shift/reduce, 9 reduce/reduce
State 109 conflicts: 6 shift/reduce
State 133 conflicts: 7 shift/reduce
State 140 conflicts: 1 shift/reduce
State 156 conflicts: 6 shift/reduce
State 167 conflicts: 6 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ldec

    2 ldec: dec ldec
    3     | %empty

    4 dec: KW_IF '(' exp ')' KW_THEN lcmd
    5    | KW_IF '(' exp ')' KW_THEN lcmd KW_ELSE lcmd
    6    | KW_WHILE '(' exp ')' lcmd
    7    | KW_FOR '(' TK_IDENTIFIER '=' exp KW_TO exp ')' lcmd
    8    | func_dec
    9    | type TK_IDENTIFIER '=' LIT_REAL ';'
   10    | type TK_IDENTIFIER '=' LIT_CHAR ';'
   11    | type TK_IDENTIFIER '=' LIT_INTEGER ';'
   12    | type '#' TK_IDENTIFIER '=' LIT_INTEGER ';'

   13 reset: ',' func_args reset
   14      | %empty

   15 block: '{' lcmd '}'
   16      | %empty

   17 lcmd: cmd ';' lcmd
   18     | %empty
   19     | cmd ';' cmd lcmd
   20     | dec

   21 cmd: block
   22    | TK_IDENTIFIER '=' exp
   23    | '#' TK_IDENTIFIER '=' exp
   24    | '&' TK_IDENTIFIER '=' exp
   25    | TK_IDENTIFIER '=' '#' exp
   26    | TK_IDENTIFIER '=' '&' exp
   27    | TK_IDENTIFIER '[' exp ']' '=' exp
   28    | '#' TK_IDENTIFIER '[' exp ']' '=' exp
   29    | '&' TK_IDENTIFIER '[' exp ']' '=' exp
   30    | TK_IDENTIFIER '=' '#' exp '[' exp ']'
   31    | TK_IDENTIFIER '=' '&' exp '[' exp ']'
   32    | TK_IDENTIFIER '(' l_func_args reset ')'
   33    | print
   34    | read
   35    | KW_RETURN exp

   36 type: LIT_INTEGER
   37     | LIT_REAL
   38     | LIT_CHAR

   39 exp: TK_IDENTIFIER
   40    | TK_IDENTIFIER '[' exp ']'
   41    | LIT_CHAR
   42    | LIT_REAL
   43    | LIT_INTEGER
   44    | exp '+' exp
   45    | exp '-' exp
   46    | exp '*' exp
   47    | exp '/' exp
   48    | exp '<' exp
   49    | exp '>' exp
   50    | '!' exp
   51    | exp OPERATOR_LE exp
   52    | exp OPERATOR_GE exp
   53    | exp OPERATOR_EQ exp
   54    | exp OPERATOR_NE exp
   55    | exp OPERATOR_AND exp
   56    | exp OPERATOR_OR exp
   57    | TK_IDENTIFIER '(' l_func_args reset ')'
   58    | '(' exp ')'

   59 func_args: LIT_REAL
   60          | LIT_CHAR
   61          | LIT_INTEGER
   62          | TK_IDENTIFIER
   63          | '#' TK_IDENTIFIER
   64          | '&' TK_IDENTIFIER

   65 l_func_args: func_args l_func_args
   66            | %empty

   67 func_dec: func_header block

   68 func_header: type TK_IDENTIFIER '(' l_func_par reset_func_par ')'

   69 func_par: type TK_IDENTIFIER

   70 l_func_par: func_par l_func_par
   71           | %empty

   72 reset_func_par: ',' func_par reset_func_par
   73               | %empty

   74 print: KW_PRINT lpe

   75 pe: LIT_STRING
   76   | TK_IDENTIFIER
   77   | '&' TK_IDENTIFIER
   78   | '#' TK_IDENTIFIER

   79 lpe: pe lpe
   80    | %empty

   81 read: KW_READ TK_IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'!' (33) 50
'#' (35) 12 23 25 28 30 63 78
'&' (38) 24 26 29 31 64 77
'(' (40) 4 5 6 7 32 57 58 68
')' (41) 4 5 6 7 32 57 58 68
'*' (42) 46
'+' (43) 44
',' (44) 13 72
'-' (45) 45
'/' (47) 47
':' (58)
';' (59) 9 10 11 12 17 19
'<' (60) 48
'=' (61) 7 9 10 11 12 22 23 24 25 26 27 28 29 30 31
'>' (62) 49
'[' (91) 27 28 29 30 31 40
']' (93) 27 28 29 30 31 40
'{' (123) 15
'}' (125) 15
error (256)
KW_CHAR (258)
KW_INT (259)
KW_FLOAT (260)
KW_IF (261) 4 5
KW_THEN (262) 4 5
KW_ELSE (263) 5
KW_WHILE (264) 6
KW_FOR (265) 7
KW_READ (266) 81
KW_RETURN (267) 35
KW_PRINT (268) 74
KW_TO (269) 7
OPERATOR_LE (270) 51
OPERATOR_GE (271) 52
OPERATOR_EQ (272) 53
OPERATOR_NE (273) 54
OPERATOR_AND (274) 55
OPERATOR_OR (275) 56
TK_IDENTIFIER (276) 7 9 10 11 12 22 23 24 25 26 27 28 29 30 31 32 39
    40 57 62 63 64 68 69 76 77 78 81
LIT_INTEGER (277) 11 12 36 43 61
LIT_REAL (278) 9 37 42 59
LIT_CHAR (279) 10 38 41 60
LIT_STRING (280) 75
TOKEN_ERROR (281)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
ldec (48)
    on left: 2 3, on right: 1 2
dec (49)
    on left: 4 5 6 7 8 9 10 11 12, on right: 2 20
reset (50)
    on left: 13 14, on right: 13 32 57
block (51)
    on left: 15 16, on right: 21 67
lcmd (52)
    on left: 17 18 19 20, on right: 4 5 6 7 15 17 19
cmd (53)
    on left: 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35, on right:
    17 19
type (54)
    on left: 36 37 38, on right: 9 10 11 12 68 69
exp (55)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    57 58, on right: 4 5 6 7 22 23 24 25 26 27 28 29 30 31 35 40 44
    45 46 47 48 49 50 51 52 53 54 55 56 58
func_args (56)
    on left: 59 60 61 62 63 64, on right: 13 65
l_func_args (57)
    on left: 65 66, on right: 32 57 65
func_dec (58)
    on left: 67, on right: 8
func_header (59)
    on left: 68, on right: 67
func_par (60)
    on left: 69, on right: 70 72
l_func_par (61)
    on left: 70 71, on right: 68 70
reset_func_par (62)
    on left: 72 73, on right: 68 72
print (63)
    on left: 74, on right: 33
pe (64)
    on left: 75 76 77 78, on right: 79
lpe (65)
    on left: 79 80, on right: 74 79
read (66)
    on left: 81, on right: 34


State 0

    0 $accept: . program $end

    KW_IF        shift, and go to state 1
    KW_WHILE     shift, and go to state 2
    KW_FOR       shift, and go to state 3
    LIT_INTEGER  shift, and go to state 4
    LIT_REAL     shift, and go to state 5
    LIT_CHAR     shift, and go to state 6

    $default  reduce using rule 3 (ldec)

    program      go to state 7
    ldec         go to state 8
    dec          go to state 9
    type         go to state 10
    func_dec     go to state 11
    func_header  go to state 12


State 1

    4 dec: KW_IF . '(' exp ')' KW_THEN lcmd
    5    | KW_IF . '(' exp ')' KW_THEN lcmd KW_ELSE lcmd

    '('  shift, and go to state 13


State 2

    6 dec: KW_WHILE . '(' exp ')' lcmd

    '('  shift, and go to state 14


State 3

    7 dec: KW_FOR . '(' TK_IDENTIFIER '=' exp KW_TO exp ')' lcmd

    '('  shift, and go to state 15


State 4

   36 type: LIT_INTEGER .

    $default  reduce using rule 36 (type)


State 5

   37 type: LIT_REAL .

    $default  reduce using rule 37 (type)


State 6

   38 type: LIT_CHAR .

    $default  reduce using rule 38 (type)


State 7

    0 $accept: program . $end

    $end  shift, and go to state 16


State 8

    1 program: ldec .

    $default  reduce using rule 1 (program)


State 9

    2 ldec: dec . ldec

    KW_IF        shift, and go to state 1
    KW_WHILE     shift, and go to state 2
    KW_FOR       shift, and go to state 3
    LIT_INTEGER  shift, and go to state 4
    LIT_REAL     shift, and go to state 5
    LIT_CHAR     shift, and go to state 6

    $default  reduce using rule 3 (ldec)

    ldec         go to state 17
    dec          go to state 9
    type         go to state 10
    func_dec     go to state 11
    func_header  go to state 12


State 10

    9 dec: type . TK_IDENTIFIER '=' LIT_REAL ';'
   10    | type . TK_IDENTIFIER '=' LIT_CHAR ';'
   11    | type . TK_IDENTIFIER '=' LIT_INTEGER ';'
   12    | type . '#' TK_IDENTIFIER '=' LIT_INTEGER ';'
   68 func_header: type . TK_IDENTIFIER '(' l_func_par reset_func_par ')'

    TK_IDENTIFIER  shift, and go to state 18
    '#'            shift, and go to state 19


State 11

    8 dec: func_dec .

    $default  reduce using rule 8 (dec)


State 12

   67 func_dec: func_header . block

    '{'  shift, and go to state 20

    $default  reduce using rule 16 (block)

    block  go to state 21


State 13

    4 dec: KW_IF '(' . exp ')' KW_THEN lcmd
    5    | KW_IF '(' . exp ')' KW_THEN lcmd KW_ELSE lcmd

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 28


State 14

    6 dec: KW_WHILE '(' . exp ')' lcmd

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 29


State 15

    7 dec: KW_FOR '(' . TK_IDENTIFIER '=' exp KW_TO exp ')' lcmd

    TK_IDENTIFIER  shift, and go to state 30


State 16

    0 $accept: program $end .

    $default  accept


State 17

    2 ldec: dec ldec .

    $default  reduce using rule 2 (ldec)


State 18

    9 dec: type TK_IDENTIFIER . '=' LIT_REAL ';'
   10    | type TK_IDENTIFIER . '=' LIT_CHAR ';'
   11    | type TK_IDENTIFIER . '=' LIT_INTEGER ';'
   68 func_header: type TK_IDENTIFIER . '(' l_func_par reset_func_par ')'

    '='  shift, and go to state 31
    '('  shift, and go to state 32


State 19

   12 dec: type '#' . TK_IDENTIFIER '=' LIT_INTEGER ';'

    TK_IDENTIFIER  shift, and go to state 33


State 20

   15 block: '{' . lcmd '}'

    KW_IF          shift, and go to state 1
    KW_WHILE       shift, and go to state 2
    KW_FOR         shift, and go to state 3
    KW_READ        shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    KW_PRINT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    LIT_INTEGER    shift, and go to state 4
    LIT_REAL       shift, and go to state 5
    LIT_CHAR       shift, and go to state 6
    '#'            shift, and go to state 38
    '{'            shift, and go to state 20
    '&'            shift, and go to state 39

    '}'       reduce using rule 18 (lcmd)
    $default  reduce using rule 16 (block)

    dec          go to state 40
    block        go to state 41
    lcmd         go to state 42
    cmd          go to state 43
    type         go to state 10
    func_dec     go to state 11
    func_header  go to state 12
    print        go to state 44
    read         go to state 45


State 21

   67 func_dec: func_header block .

    $default  reduce using rule 67 (func_dec)


State 22

   39 exp: TK_IDENTIFIER .
   40    | TK_IDENTIFIER . '[' exp ']'
   57    | TK_IDENTIFIER . '(' l_func_args reset ')'

    '('  shift, and go to state 46
    '['  shift, and go to state 47

    '['       [reduce using rule 39 (exp)]
    $default  reduce using rule 39 (exp)


State 23

   43 exp: LIT_INTEGER .

    $default  reduce using rule 43 (exp)


State 24

   42 exp: LIT_REAL .

    $default  reduce using rule 42 (exp)


State 25

   41 exp: LIT_CHAR .

    $default  reduce using rule 41 (exp)


State 26

   50 exp: '!' . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 48


State 27

   58 exp: '(' . exp ')'

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 49


State 28

    4 dec: KW_IF '(' exp . ')' KW_THEN lcmd
    5    | KW_IF '(' exp . ')' KW_THEN lcmd KW_ELSE lcmd
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61
    ')'           shift, and go to state 62


State 29

    6 dec: KW_WHILE '(' exp . ')' lcmd
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61
    ')'           shift, and go to state 63


State 30

    7 dec: KW_FOR '(' TK_IDENTIFIER . '=' exp KW_TO exp ')' lcmd

    '='  shift, and go to state 64


State 31

    9 dec: type TK_IDENTIFIER '=' . LIT_REAL ';'
   10    | type TK_IDENTIFIER '=' . LIT_CHAR ';'
   11    | type TK_IDENTIFIER '=' . LIT_INTEGER ';'

    LIT_INTEGER  shift, and go to state 65
    LIT_REAL     shift, and go to state 66
    LIT_CHAR     shift, and go to state 67


State 32

   68 func_header: type TK_IDENTIFIER '(' . l_func_par reset_func_par ')'

    LIT_INTEGER  shift, and go to state 4
    LIT_REAL     shift, and go to state 5
    LIT_CHAR     shift, and go to state 6

    $default  reduce using rule 71 (l_func_par)

    type        go to state 68
    func_par    go to state 69
    l_func_par  go to state 70


State 33

   12 dec: type '#' TK_IDENTIFIER . '=' LIT_INTEGER ';'

    '='  shift, and go to state 71


State 34

   81 read: KW_READ . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 72


State 35

   35 cmd: KW_RETURN . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 73


State 36

   74 print: KW_PRINT . lpe

    TK_IDENTIFIER  shift, and go to state 74
    LIT_STRING     shift, and go to state 75
    '#'            shift, and go to state 76
    '&'            shift, and go to state 77

    TK_IDENTIFIER  [reduce using rule 80 (lpe)]
    '#'            [reduce using rule 80 (lpe)]
    '&'            [reduce using rule 80 (lpe)]
    $default       reduce using rule 80 (lpe)

    pe   go to state 78
    lpe  go to state 79


State 37

   22 cmd: TK_IDENTIFIER . '=' exp
   25    | TK_IDENTIFIER . '=' '#' exp
   26    | TK_IDENTIFIER . '=' '&' exp
   27    | TK_IDENTIFIER . '[' exp ']' '=' exp
   30    | TK_IDENTIFIER . '=' '#' exp '[' exp ']'
   31    | TK_IDENTIFIER . '=' '&' exp '[' exp ']'
   32    | TK_IDENTIFIER . '(' l_func_args reset ')'

    '='  shift, and go to state 80
    '('  shift, and go to state 81
    '['  shift, and go to state 82


State 38

   23 cmd: '#' . TK_IDENTIFIER '=' exp
   28    | '#' . TK_IDENTIFIER '[' exp ']' '=' exp

    TK_IDENTIFIER  shift, and go to state 83


State 39

   24 cmd: '&' . TK_IDENTIFIER '=' exp
   29    | '&' . TK_IDENTIFIER '[' exp ']' '=' exp

    TK_IDENTIFIER  shift, and go to state 84


State 40

   20 lcmd: dec .

    $default  reduce using rule 20 (lcmd)


State 41

   21 cmd: block .

    $default  reduce using rule 21 (cmd)


State 42

   15 block: '{' lcmd . '}'

    '}'  shift, and go to state 85


State 43

   17 lcmd: cmd . ';' lcmd
   19     | cmd . ';' cmd lcmd

    ';'  shift, and go to state 86


State 44

   33 cmd: print .

    $default  reduce using rule 33 (cmd)


State 45

   34 cmd: read .

    $default  reduce using rule 34 (cmd)


State 46

   57 exp: TK_IDENTIFIER '(' . l_func_args reset ')'

    TK_IDENTIFIER  shift, and go to state 87
    LIT_INTEGER    shift, and go to state 88
    LIT_REAL       shift, and go to state 89
    LIT_CHAR       shift, and go to state 90
    '#'            shift, and go to state 91
    '&'            shift, and go to state 92

    $default  reduce using rule 66 (l_func_args)

    func_args    go to state 93
    l_func_args  go to state 94


State 47

   40 exp: TK_IDENTIFIER '[' . exp ']'

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 95


State 48

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | '!' exp .
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61

    $default  reduce using rule 50 (exp)


State 49

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp
   58    | '(' exp . ')'

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61
    ')'           shift, and go to state 96


State 50

   51 exp: exp OPERATOR_LE . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 97


State 51

   52 exp: exp OPERATOR_GE . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 98


State 52

   53 exp: exp OPERATOR_EQ . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 99


State 53

   54 exp: exp OPERATOR_NE . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 100


State 54

   55 exp: exp OPERATOR_AND . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 101


State 55

   56 exp: exp OPERATOR_OR . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 102


State 56

   48 exp: exp '<' . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 103


State 57

   49 exp: exp '>' . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 104


State 58

   44 exp: exp '+' . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 105


State 59

   45 exp: exp '-' . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 106


State 60

   46 exp: exp '*' . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 107


State 61

   47 exp: exp '/' . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 108


State 62

    4 dec: KW_IF '(' exp ')' . KW_THEN lcmd
    5    | KW_IF '(' exp ')' . KW_THEN lcmd KW_ELSE lcmd

    KW_THEN  shift, and go to state 109


State 63

    6 dec: KW_WHILE '(' exp ')' . lcmd

    KW_IF          shift, and go to state 1
    KW_WHILE       shift, and go to state 2
    KW_FOR         shift, and go to state 3
    KW_READ        shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    KW_PRINT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    LIT_INTEGER    shift, and go to state 4
    LIT_REAL       shift, and go to state 5
    LIT_CHAR       shift, and go to state 6
    '#'            shift, and go to state 38
    '{'            shift, and go to state 20
    '&'            shift, and go to state 39

    KW_IF        [reduce using rule 18 (lcmd)]
    KW_WHILE     [reduce using rule 18 (lcmd)]
    KW_FOR       [reduce using rule 18 (lcmd)]
    LIT_INTEGER  [reduce using rule 18 (lcmd)]
    LIT_REAL     [reduce using rule 18 (lcmd)]
    LIT_CHAR     [reduce using rule 18 (lcmd)]
    ';'          reduce using rule 16 (block)
    $default     reduce using rule 18 (lcmd)

    dec          go to state 40
    block        go to state 41
    lcmd         go to state 110
    cmd          go to state 43
    type         go to state 10
    func_dec     go to state 11
    func_header  go to state 12
    print        go to state 44
    read         go to state 45


State 64

    7 dec: KW_FOR '(' TK_IDENTIFIER '=' . exp KW_TO exp ')' lcmd

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 111


State 65

   11 dec: type TK_IDENTIFIER '=' LIT_INTEGER . ';'

    ';'  shift, and go to state 112


State 66

    9 dec: type TK_IDENTIFIER '=' LIT_REAL . ';'

    ';'  shift, and go to state 113


State 67

   10 dec: type TK_IDENTIFIER '=' LIT_CHAR . ';'

    ';'  shift, and go to state 114


State 68

   69 func_par: type . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 115


State 69

   70 l_func_par: func_par . l_func_par

    LIT_INTEGER  shift, and go to state 4
    LIT_REAL     shift, and go to state 5
    LIT_CHAR     shift, and go to state 6

    $default  reduce using rule 71 (l_func_par)

    type        go to state 68
    func_par    go to state 69
    l_func_par  go to state 116


State 70

   68 func_header: type TK_IDENTIFIER '(' l_func_par . reset_func_par ')'

    ','  shift, and go to state 117

    $default  reduce using rule 73 (reset_func_par)

    reset_func_par  go to state 118


State 71

   12 dec: type '#' TK_IDENTIFIER '=' . LIT_INTEGER ';'

    LIT_INTEGER  shift, and go to state 119


State 72

   81 read: KW_READ TK_IDENTIFIER .

    $default  reduce using rule 81 (read)


State 73

   35 cmd: KW_RETURN exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61

    $default  reduce using rule 35 (cmd)


State 74

   76 pe: TK_IDENTIFIER .

    $default  reduce using rule 76 (pe)


State 75

   75 pe: LIT_STRING .

    $default  reduce using rule 75 (pe)


State 76

   78 pe: '#' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 120


State 77

   77 pe: '&' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 121


State 78

   79 lpe: pe . lpe

    TK_IDENTIFIER  shift, and go to state 74
    LIT_STRING     shift, and go to state 75
    '#'            shift, and go to state 76
    '&'            shift, and go to state 77

    TK_IDENTIFIER  [reduce using rule 80 (lpe)]
    '#'            [reduce using rule 80 (lpe)]
    '&'            [reduce using rule 80 (lpe)]
    $default       reduce using rule 80 (lpe)

    pe   go to state 78
    lpe  go to state 122


State 79

   74 print: KW_PRINT lpe .

    $default  reduce using rule 74 (print)


State 80

   22 cmd: TK_IDENTIFIER '=' . exp
   25    | TK_IDENTIFIER '=' . '#' exp
   26    | TK_IDENTIFIER '=' . '&' exp
   30    | TK_IDENTIFIER '=' . '#' exp '[' exp ']'
   31    | TK_IDENTIFIER '=' . '&' exp '[' exp ']'

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27
    '#'            shift, and go to state 123
    '&'            shift, and go to state 124

    exp  go to state 125


State 81

   32 cmd: TK_IDENTIFIER '(' . l_func_args reset ')'

    TK_IDENTIFIER  shift, and go to state 87
    LIT_INTEGER    shift, and go to state 88
    LIT_REAL       shift, and go to state 89
    LIT_CHAR       shift, and go to state 90
    '#'            shift, and go to state 91
    '&'            shift, and go to state 92

    $default  reduce using rule 66 (l_func_args)

    func_args    go to state 93
    l_func_args  go to state 126


State 82

   27 cmd: TK_IDENTIFIER '[' . exp ']' '=' exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 127


State 83

   23 cmd: '#' TK_IDENTIFIER . '=' exp
   28    | '#' TK_IDENTIFIER . '[' exp ']' '=' exp

    '='  shift, and go to state 128
    '['  shift, and go to state 129


State 84

   24 cmd: '&' TK_IDENTIFIER . '=' exp
   29    | '&' TK_IDENTIFIER . '[' exp ']' '=' exp

    '='  shift, and go to state 130
    '['  shift, and go to state 131


State 85

   15 block: '{' lcmd '}' .

    $default  reduce using rule 15 (block)


State 86

   17 lcmd: cmd ';' . lcmd
   19     | cmd ';' . cmd lcmd

    KW_IF          shift, and go to state 1
    KW_WHILE       shift, and go to state 2
    KW_FOR         shift, and go to state 3
    KW_READ        shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    KW_PRINT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    LIT_INTEGER    shift, and go to state 4
    LIT_REAL       shift, and go to state 5
    LIT_CHAR       shift, and go to state 6
    '#'            shift, and go to state 38
    '{'            shift, and go to state 20
    '&'            shift, and go to state 39

    $end           reduce using rule 16 (block)
    $end           [reduce using rule 18 (lcmd)]
    KW_IF          [reduce using rule 16 (block)]
    KW_IF          [reduce using rule 18 (lcmd)]
    KW_ELSE        reduce using rule 16 (block)
    KW_ELSE        [reduce using rule 18 (lcmd)]
    KW_WHILE       [reduce using rule 16 (block)]
    KW_WHILE       [reduce using rule 18 (lcmd)]
    KW_FOR         [reduce using rule 16 (block)]
    KW_FOR         [reduce using rule 18 (lcmd)]
    KW_READ        [reduce using rule 16 (block)]
    KW_RETURN      [reduce using rule 16 (block)]
    KW_PRINT       [reduce using rule 16 (block)]
    TK_IDENTIFIER  [reduce using rule 16 (block)]
    LIT_INTEGER    [reduce using rule 16 (block)]
    LIT_INTEGER    [reduce using rule 18 (lcmd)]
    LIT_REAL       [reduce using rule 16 (block)]
    LIT_REAL       [reduce using rule 18 (lcmd)]
    LIT_CHAR       [reduce using rule 16 (block)]
    LIT_CHAR       [reduce using rule 18 (lcmd)]
    '#'            [reduce using rule 16 (block)]
    '{'            [reduce using rule 16 (block)]
    '}'            reduce using rule 16 (block)
    '}'            [reduce using rule 18 (lcmd)]
    '&'            [reduce using rule 16 (block)]
    $default       reduce using rule 16 (block)

    dec          go to state 40
    block        go to state 41
    lcmd         go to state 132
    cmd          go to state 133
    type         go to state 10
    func_dec     go to state 11
    func_header  go to state 12
    print        go to state 44
    read         go to state 45


State 87

   62 func_args: TK_IDENTIFIER .

    $default  reduce using rule 62 (func_args)


State 88

   61 func_args: LIT_INTEGER .

    $default  reduce using rule 61 (func_args)


State 89

   59 func_args: LIT_REAL .

    $default  reduce using rule 59 (func_args)


State 90

   60 func_args: LIT_CHAR .

    $default  reduce using rule 60 (func_args)


State 91

   63 func_args: '#' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 134


State 92

   64 func_args: '&' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 135


State 93

   65 l_func_args: func_args . l_func_args

    TK_IDENTIFIER  shift, and go to state 87
    LIT_INTEGER    shift, and go to state 88
    LIT_REAL       shift, and go to state 89
    LIT_CHAR       shift, and go to state 90
    '#'            shift, and go to state 91
    '&'            shift, and go to state 92

    $default  reduce using rule 66 (l_func_args)

    func_args    go to state 93
    l_func_args  go to state 136


State 94

   57 exp: TK_IDENTIFIER '(' l_func_args . reset ')'

    ','  shift, and go to state 137

    $default  reduce using rule 14 (reset)

    reset  go to state 138


State 95

   40 exp: TK_IDENTIFIER '[' exp . ']'
   44    | exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61
    ']'           shift, and go to state 139


State 96

   58 exp: '(' exp ')' .

    $default  reduce using rule 58 (exp)


State 97

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   51    | exp OPERATOR_LE exp .
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61

    $default  reduce using rule 51 (exp)


State 98

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   52    | exp OPERATOR_GE exp .
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61

    $default  reduce using rule 52 (exp)


State 99

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   53    | exp OPERATOR_EQ exp .
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61

    $default  reduce using rule 53 (exp)


State 100

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   54    | exp OPERATOR_NE exp .
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61

    $default  reduce using rule 54 (exp)


State 101

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   55    | exp OPERATOR_AND exp .
   56    | exp . OPERATOR_OR exp

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '*'  shift, and go to state 60
    '/'  shift, and go to state 61

    $default  reduce using rule 55 (exp)


State 102

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp
   56    | exp OPERATOR_OR exp .

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '*'  shift, and go to state 60
    '/'  shift, and go to state 61

    $default  reduce using rule 56 (exp)


State 103

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   48    | exp '<' exp .
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61

    $default  reduce using rule 48 (exp)


State 104

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   49    | exp '>' exp .
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61

    $default  reduce using rule 49 (exp)


State 105

   44 exp: exp . '+' exp
   44    | exp '+' exp .
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    '*'  shift, and go to state 60
    '/'  shift, and go to state 61

    $default  reduce using rule 44 (exp)


State 106

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   45    | exp '-' exp .
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    '*'  shift, and go to state 60
    '/'  shift, and go to state 61

    $default  reduce using rule 45 (exp)


State 107

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   46    | exp '*' exp .
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    '/'  shift, and go to state 61

    $default  reduce using rule 46 (exp)


State 108

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   47    | exp '/' exp .
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    $default  reduce using rule 47 (exp)


State 109

    4 dec: KW_IF '(' exp ')' KW_THEN . lcmd
    5    | KW_IF '(' exp ')' KW_THEN . lcmd KW_ELSE lcmd

    KW_IF          shift, and go to state 1
    KW_WHILE       shift, and go to state 2
    KW_FOR         shift, and go to state 3
    KW_READ        shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    KW_PRINT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    LIT_INTEGER    shift, and go to state 4
    LIT_REAL       shift, and go to state 5
    LIT_CHAR       shift, and go to state 6
    '#'            shift, and go to state 38
    '{'            shift, and go to state 20
    '&'            shift, and go to state 39

    KW_IF        [reduce using rule 18 (lcmd)]
    KW_WHILE     [reduce using rule 18 (lcmd)]
    KW_FOR       [reduce using rule 18 (lcmd)]
    LIT_INTEGER  [reduce using rule 18 (lcmd)]
    LIT_REAL     [reduce using rule 18 (lcmd)]
    LIT_CHAR     [reduce using rule 18 (lcmd)]
    ';'          reduce using rule 16 (block)
    $default     reduce using rule 18 (lcmd)

    dec          go to state 40
    block        go to state 41
    lcmd         go to state 140
    cmd          go to state 43
    type         go to state 10
    func_dec     go to state 11
    func_header  go to state 12
    print        go to state 44
    read         go to state 45


State 110

    6 dec: KW_WHILE '(' exp ')' lcmd .

    $default  reduce using rule 6 (dec)


State 111

    7 dec: KW_FOR '(' TK_IDENTIFIER '=' exp . KW_TO exp ')' lcmd
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    KW_TO         shift, and go to state 141
    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61


State 112

   11 dec: type TK_IDENTIFIER '=' LIT_INTEGER ';' .

    $default  reduce using rule 11 (dec)


State 113

    9 dec: type TK_IDENTIFIER '=' LIT_REAL ';' .

    $default  reduce using rule 9 (dec)


State 114

   10 dec: type TK_IDENTIFIER '=' LIT_CHAR ';' .

    $default  reduce using rule 10 (dec)


State 115

   69 func_par: type TK_IDENTIFIER .

    $default  reduce using rule 69 (func_par)


State 116

   70 l_func_par: func_par l_func_par .

    $default  reduce using rule 70 (l_func_par)


State 117

   72 reset_func_par: ',' . func_par reset_func_par

    LIT_INTEGER  shift, and go to state 4
    LIT_REAL     shift, and go to state 5
    LIT_CHAR     shift, and go to state 6

    type      go to state 68
    func_par  go to state 142


State 118

   68 func_header: type TK_IDENTIFIER '(' l_func_par reset_func_par . ')'

    ')'  shift, and go to state 143


State 119

   12 dec: type '#' TK_IDENTIFIER '=' LIT_INTEGER . ';'

    ';'  shift, and go to state 144


State 120

   78 pe: '#' TK_IDENTIFIER .

    $default  reduce using rule 78 (pe)


State 121

   77 pe: '&' TK_IDENTIFIER .

    $default  reduce using rule 77 (pe)


State 122

   79 lpe: pe lpe .

    $default  reduce using rule 79 (lpe)


State 123

   25 cmd: TK_IDENTIFIER '=' '#' . exp
   30    | TK_IDENTIFIER '=' '#' . exp '[' exp ']'

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 145


State 124

   26 cmd: TK_IDENTIFIER '=' '&' . exp
   31    | TK_IDENTIFIER '=' '&' . exp '[' exp ']'

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 146


State 125

   22 cmd: TK_IDENTIFIER '=' exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61

    $default  reduce using rule 22 (cmd)


State 126

   32 cmd: TK_IDENTIFIER '(' l_func_args . reset ')'

    ','  shift, and go to state 137

    $default  reduce using rule 14 (reset)

    reset  go to state 147


State 127

   27 cmd: TK_IDENTIFIER '[' exp . ']' '=' exp
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61
    ']'           shift, and go to state 148


State 128

   23 cmd: '#' TK_IDENTIFIER '=' . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 149


State 129

   28 cmd: '#' TK_IDENTIFIER '[' . exp ']' '=' exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 150


State 130

   24 cmd: '&' TK_IDENTIFIER '=' . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 151


State 131

   29 cmd: '&' TK_IDENTIFIER '[' . exp ']' '=' exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 152


State 132

   17 lcmd: cmd ';' lcmd .

    $default  reduce using rule 17 (lcmd)


State 133

   17 lcmd: cmd . ';' lcmd
   19     | cmd . ';' cmd lcmd
   19     | cmd ';' cmd . lcmd

    KW_IF          shift, and go to state 1
    KW_WHILE       shift, and go to state 2
    KW_FOR         shift, and go to state 3
    KW_READ        shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    KW_PRINT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    LIT_INTEGER    shift, and go to state 4
    LIT_REAL       shift, and go to state 5
    LIT_CHAR       shift, and go to state 6
    ';'            shift, and go to state 86
    '#'            shift, and go to state 38
    '{'            shift, and go to state 20
    '&'            shift, and go to state 39

    KW_IF        [reduce using rule 18 (lcmd)]
    KW_WHILE     [reduce using rule 18 (lcmd)]
    KW_FOR       [reduce using rule 18 (lcmd)]
    LIT_INTEGER  [reduce using rule 18 (lcmd)]
    LIT_REAL     [reduce using rule 18 (lcmd)]
    LIT_CHAR     [reduce using rule 18 (lcmd)]
    ';'          [reduce using rule 16 (block)]
    $default     reduce using rule 18 (lcmd)

    dec          go to state 40
    block        go to state 41
    lcmd         go to state 153
    cmd          go to state 43
    type         go to state 10
    func_dec     go to state 11
    func_header  go to state 12
    print        go to state 44
    read         go to state 45


State 134

   63 func_args: '#' TK_IDENTIFIER .

    $default  reduce using rule 63 (func_args)


State 135

   64 func_args: '&' TK_IDENTIFIER .

    $default  reduce using rule 64 (func_args)


State 136

   65 l_func_args: func_args l_func_args .

    $default  reduce using rule 65 (l_func_args)


State 137

   13 reset: ',' . func_args reset

    TK_IDENTIFIER  shift, and go to state 87
    LIT_INTEGER    shift, and go to state 88
    LIT_REAL       shift, and go to state 89
    LIT_CHAR       shift, and go to state 90
    '#'            shift, and go to state 91
    '&'            shift, and go to state 92

    func_args  go to state 154


State 138

   57 exp: TK_IDENTIFIER '(' l_func_args reset . ')'

    ')'  shift, and go to state 155


State 139

   40 exp: TK_IDENTIFIER '[' exp ']' .

    $default  reduce using rule 40 (exp)


State 140

    4 dec: KW_IF '(' exp ')' KW_THEN lcmd .
    5    | KW_IF '(' exp ')' KW_THEN lcmd . KW_ELSE lcmd

    KW_ELSE  shift, and go to state 156

    KW_ELSE   [reduce using rule 4 (dec)]
    $default  reduce using rule 4 (dec)


State 141

    7 dec: KW_FOR '(' TK_IDENTIFIER '=' exp KW_TO . exp ')' lcmd

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 157


State 142

   72 reset_func_par: ',' func_par . reset_func_par

    ','  shift, and go to state 117

    $default  reduce using rule 73 (reset_func_par)

    reset_func_par  go to state 158


State 143

   68 func_header: type TK_IDENTIFIER '(' l_func_par reset_func_par ')' .

    $default  reduce using rule 68 (func_header)


State 144

   12 dec: type '#' TK_IDENTIFIER '=' LIT_INTEGER ';' .

    $default  reduce using rule 12 (dec)


State 145

   25 cmd: TK_IDENTIFIER '=' '#' exp .
   30    | TK_IDENTIFIER '=' '#' exp . '[' exp ']'
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61
    '['           shift, and go to state 159

    $default  reduce using rule 25 (cmd)


State 146

   26 cmd: TK_IDENTIFIER '=' '&' exp .
   31    | TK_IDENTIFIER '=' '&' exp . '[' exp ']'
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61
    '['           shift, and go to state 160

    $default  reduce using rule 26 (cmd)


State 147

   32 cmd: TK_IDENTIFIER '(' l_func_args reset . ')'

    ')'  shift, and go to state 161


State 148

   27 cmd: TK_IDENTIFIER '[' exp ']' . '=' exp

    '='  shift, and go to state 162


State 149

   23 cmd: '#' TK_IDENTIFIER '=' exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61

    $default  reduce using rule 23 (cmd)


State 150

   28 cmd: '#' TK_IDENTIFIER '[' exp . ']' '=' exp
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61
    ']'           shift, and go to state 163


State 151

   24 cmd: '&' TK_IDENTIFIER '=' exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61

    $default  reduce using rule 24 (cmd)


State 152

   29 cmd: '&' TK_IDENTIFIER '[' exp . ']' '=' exp
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61
    ']'           shift, and go to state 164


State 153

   19 lcmd: cmd ';' cmd lcmd .

    $default  reduce using rule 19 (lcmd)


State 154

   13 reset: ',' func_args . reset

    ','  shift, and go to state 137

    $default  reduce using rule 14 (reset)

    reset  go to state 165


State 155

   57 exp: TK_IDENTIFIER '(' l_func_args reset ')' .

    $default  reduce using rule 57 (exp)


State 156

    5 dec: KW_IF '(' exp ')' KW_THEN lcmd KW_ELSE . lcmd

    KW_IF          shift, and go to state 1
    KW_WHILE       shift, and go to state 2
    KW_FOR         shift, and go to state 3
    KW_READ        shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    KW_PRINT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    LIT_INTEGER    shift, and go to state 4
    LIT_REAL       shift, and go to state 5
    LIT_CHAR       shift, and go to state 6
    '#'            shift, and go to state 38
    '{'            shift, and go to state 20
    '&'            shift, and go to state 39

    KW_IF        [reduce using rule 18 (lcmd)]
    KW_WHILE     [reduce using rule 18 (lcmd)]
    KW_FOR       [reduce using rule 18 (lcmd)]
    LIT_INTEGER  [reduce using rule 18 (lcmd)]
    LIT_REAL     [reduce using rule 18 (lcmd)]
    LIT_CHAR     [reduce using rule 18 (lcmd)]
    ';'          reduce using rule 16 (block)
    $default     reduce using rule 18 (lcmd)

    dec          go to state 40
    block        go to state 41
    lcmd         go to state 166
    cmd          go to state 43
    type         go to state 10
    func_dec     go to state 11
    func_header  go to state 12
    print        go to state 44
    read         go to state 45


State 157

    7 dec: KW_FOR '(' TK_IDENTIFIER '=' exp KW_TO exp . ')' lcmd
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61
    ')'           shift, and go to state 167


State 158

   72 reset_func_par: ',' func_par reset_func_par .

    $default  reduce using rule 72 (reset_func_par)


State 159

   30 cmd: TK_IDENTIFIER '=' '#' exp '[' . exp ']'

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 168


State 160

   31 cmd: TK_IDENTIFIER '=' '&' exp '[' . exp ']'

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 169


State 161

   32 cmd: TK_IDENTIFIER '(' l_func_args reset ')' .

    $default  reduce using rule 32 (cmd)


State 162

   27 cmd: TK_IDENTIFIER '[' exp ']' '=' . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 170


State 163

   28 cmd: '#' TK_IDENTIFIER '[' exp ']' . '=' exp

    '='  shift, and go to state 171


State 164

   29 cmd: '&' TK_IDENTIFIER '[' exp ']' . '=' exp

    '='  shift, and go to state 172


State 165

   13 reset: ',' func_args reset .

    $default  reduce using rule 13 (reset)


State 166

    5 dec: KW_IF '(' exp ')' KW_THEN lcmd KW_ELSE lcmd .

    $default  reduce using rule 5 (dec)


State 167

    7 dec: KW_FOR '(' TK_IDENTIFIER '=' exp KW_TO exp ')' . lcmd

    KW_IF          shift, and go to state 1
    KW_WHILE       shift, and go to state 2
    KW_FOR         shift, and go to state 3
    KW_READ        shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    KW_PRINT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    LIT_INTEGER    shift, and go to state 4
    LIT_REAL       shift, and go to state 5
    LIT_CHAR       shift, and go to state 6
    '#'            shift, and go to state 38
    '{'            shift, and go to state 20
    '&'            shift, and go to state 39

    KW_IF        [reduce using rule 18 (lcmd)]
    KW_WHILE     [reduce using rule 18 (lcmd)]
    KW_FOR       [reduce using rule 18 (lcmd)]
    LIT_INTEGER  [reduce using rule 18 (lcmd)]
    LIT_REAL     [reduce using rule 18 (lcmd)]
    LIT_CHAR     [reduce using rule 18 (lcmd)]
    ';'          reduce using rule 16 (block)
    $default     reduce using rule 18 (lcmd)

    dec          go to state 40
    block        go to state 41
    lcmd         go to state 173
    cmd          go to state 43
    type         go to state 10
    func_dec     go to state 11
    func_header  go to state 12
    print        go to state 44
    read         go to state 45


State 168

   30 cmd: TK_IDENTIFIER '=' '#' exp '[' exp . ']'
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61
    ']'           shift, and go to state 174


State 169

   31 cmd: TK_IDENTIFIER '=' '&' exp '[' exp . ']'
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61
    ']'           shift, and go to state 175


State 170

   27 cmd: TK_IDENTIFIER '[' exp ']' '=' exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61

    $default  reduce using rule 27 (cmd)


State 171

   28 cmd: '#' TK_IDENTIFIER '[' exp ']' '=' . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 176


State 172

   29 cmd: '&' TK_IDENTIFIER '[' exp ']' '=' . exp

    TK_IDENTIFIER  shift, and go to state 22
    LIT_INTEGER    shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_CHAR       shift, and go to state 25
    '!'            shift, and go to state 26
    '('            shift, and go to state 27

    exp  go to state 177


State 173

    7 dec: KW_FOR '(' TK_IDENTIFIER '=' exp KW_TO exp ')' lcmd .

    $default  reduce using rule 7 (dec)


State 174

   30 cmd: TK_IDENTIFIER '=' '#' exp '[' exp ']' .

    $default  reduce using rule 30 (cmd)


State 175

   31 cmd: TK_IDENTIFIER '=' '&' exp '[' exp ']' .

    $default  reduce using rule 31 (cmd)


State 176

   28 cmd: '#' TK_IDENTIFIER '[' exp ']' '=' exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61

    $default  reduce using rule 28 (cmd)


State 177

   29 cmd: '&' TK_IDENTIFIER '[' exp ']' '=' exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 50
    OPERATOR_GE   shift, and go to state 51
    OPERATOR_EQ   shift, and go to state 52
    OPERATOR_NE   shift, and go to state 53
    OPERATOR_AND  shift, and go to state 54
    OPERATOR_OR   shift, and go to state 55
    '<'           shift, and go to state 56
    '>'           shift, and go to state 57
    '+'           shift, and go to state 58
    '-'           shift, and go to state 59
    '*'           shift, and go to state 60
    '/'           shift, and go to state 61

    $default  reduce using rule 29 (cmd)
